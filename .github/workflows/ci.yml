name: CI

on:
  workflow_call:
    inputs:
      build-ref:
        required: true
        type: string
  workflow_dispatch:
  push:

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
        lfs: true
    - uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json
    - uses: dotnet/nbgv@v0.4
      id: nbgv

    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          src/HuggingfaceTokenizer/RustLib
    - run: cargo build --release
      working-directory: src/HuggingfaceTokenizer/RustLib

    - run: dotnet restore /p:ContinuousIntegrationBuild=true
    - run: dotnet build -c Release --no-restore /p:ContinuousIntegrationBuild=true

    - run: >
        dotnet test
        -c Release --no-restore --no-build
        /p:ContinuousIntegrationBuild=true
        /p:CoverletOutputFormat=opencover
        -s CodeCoverage.runsettings
        --collect:"XPlat Code Coverage"
        --logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true"
        --
        RunConfiguration.CollectSourceInformation=true

    - name: Upload coverage reports to Codecov
      if: ${{ env.CODECOV_TOKEN }}
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        slug: georg-jung/FastBertTokenizer

    - run: dotnet pack -c Release --no-restore --no-build /p:ContinuousIntegrationBuild=true
    - uses: actions/upload-artifact@v4
      with:
        name: FastBertTokenizer-nupkg-${{ steps.nbgv.outputs.Version }}
        path: bin/Packages/Release/**/*
